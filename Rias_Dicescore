#%%
#packages: opencv, numpy, gt
import cv2 as cv2
import numpy as np
import gt as gt

##first we need to threshold the ground truth images
#making the gt images black & white only
T1 = 0
T2 = 1
gt2 = gt.clip(T1,T2)
figure(figsize=(15,8))
imshow(gt2, 'gray')
colorbar()


##designing the dice coefficent
#loading the images (true = ground truth image; pred = predicted segmentation by SVM)
img1_true = cv2.imread('path to image') #reads image into numpy array (2D matrix)
img1_pred = cv2.imread('path to image')

#defining the variables 'intersection' and 'union'
intersection = np.sum(img1_pred == img1_true) #counts pixels/sums intensity values in which pred = true
union = np.sum(img1_pred) + np.sum(img1_true)

#calculating the dice
if intersection + union == 0:
    print('dice cannot be calculated - no intersection')
else:
    dice = (2*intersection)/(union + intersection)
    print(dice)

##reusable code - TO BE DONE
def dice_coefficent (groundtruth, SVMprediction)
